Writing Organised CSS - Section 5, Lecture 13
1. File architecture
2. Identify patterns in design
3. Rules to follow for creating class names and writing our CSS selectors.

B.E.M Principles
Popular abstract way of thinking about our interface.
Block - an independent, reusable part of our design.
Element - belongs to a block.  It cannot be used outside of the block that it belongs to.
Modifier - can be used on a block or an element to indicate a change to the default state of an object.

- CSS selectors should target elements directory with classes, instead of relying on type selectors, 
	descendent selectors, and the cascade.
- Because we are limiting cascade we are free to move blocks around and reuse them throughout the page.
- Blocks can be nested inside other blocks.
- Identify patterns, and then create single-responsibility blocks.
- Makes the relationship between our HTML and CSS clear.

There is no need to code a pattern more than once.

Complete two blocks - CSS Architecture
Lesson 15
- large-hero block
- button block

REM - relative to root of the page.
for font-size, padding, etc.

Lesson 17 - Gulp organisation.

Lesson 18 - Gulp Error Handling
 - on error handling with console output.
 
Lesson 19 - what does "Mobile-First" mean?
- Mobile-First can mean different things in different contexts
- How does "mobile-first" apply to our Travel site?
- begin writing css the "mobile-first" way.

What is responsive web design?
What are the shortcomings of traditional responsive web design?

Design Context vs Development Context
Designing around a smaller screen fist.
Force us to prioritize our content
Anticipate most common user actions.
Information architects, graphic designers, usability experts

vs
Coding the site so devices don't download unnecessary data.
Treat the most essential view of our website as our baseline and code upwards from there.
Make the site load quickly for everyone.

Not all projects you'll work on will include a mobile-view design comp.

Even if we are only given a desktop design comp, there is no reason to not make every website
you develop a mobile-first website.

Where do we begin with mobile-first development?
- HTML
- CSS
- JavaScriptavaScript

Lesson 20 - Responsive Images
1. What is a responsive image and why do we need it?
2. Example page: Two unique situations (two unique code patterns.)
3. Apply what we've learned - begin adding responsive images to our travel website

Responsive Image Situations
1. Art direction and cropping situation - picture element
2. Image resolution and file size situation (faster load times) - img tag with options.

Lesson 27 - Git branches. Yay :)
Goals:
1. Understand what a branch is.
2. How to create a new branch
3. How to switch between branches.
4. Merge one branch into another.

Other "branch" topics
1. "--no-ff" merge option.
2. How to handle merge conflicts

The no-ff option sets a specific commit for the merge.

Lesson 31 - Flexbox
The taught way to get the columns to have the same height for the transparent background in the testimonials section.

Lesson 32 - Gulp Timeout - Automatic Sprites with Gulp
A sprite is a single image file with all of the icons.

Lesson 39 - Javascript.
What is Object-oriented programming?

Object: something that has Data and Behaviour.
  OR:   enity that has Nouns and Verbs.
  
Lesson 40: Staying Organised in JavaScript
- Webpack

Lesson 50: Building a Modal from Scratch (part 1)
Overview:
1. Take care of our Git branches
2. HTML and CSS for the overlay - let it always display.
3. JS to hide overlay initially and reveal on click.

Lesson 51: Building a Modal from Scratch (Part 2)
 (Create Our Own Modal / Overlay)
 
Lesson 55: SVG support for legacy browsers
Outline:
1. Use Gulp to automatically create a PNG copy of out SVG icon sprite.

2. Only send the PNG version to browsers that don't support SVG.  Use Modernizr to test web browser for SVG support.

Lesson 58 - Going Live  
Goal: make our files as small as possible.
Create a new Gulp task that automatically builds the "dist" folder for us.
it 

Goals for our CSS and JS:
- Copy to dist folder
- Compress file-size
- Revision
