Writing Organised CSS - Section 5, Lecture 13
1. File architecture
2. Identify patterns in design
3. Rules to follow for creating class names and writing our CSS selectors.

B.E.M Principles
Popular abstract way of thinking about our interface.
Block - an independent, reusable part of our design.
Element - belongs to a block.  It cannot be used outside of the block that it belongs to.
Modifier - can be used on a block or an element to indicate a change to the default state of an object.

- CSS selectors should target elements directory with classes, instead of relying on type selectors, 
	descendent selectors, and the cascade.
- Because we are limiting cascade we are free to move blocks around and reuse them throughout the page.
- Blocks can be nested inside other blocks.
- Identify patterns, and then create single-responsibility blocks.
- Makes the relationship between our HTML and CSS clear.

There is no need to code a pattern more than once.

Complete two blocks - CSS Architecture
Lesson 15
- large-hero block
- button block

REM - relative to root of the page.
for font-size, padding, etc.

Lesson 17 - Gulp organisation.

Lesson 18 - Gulp Error Handling
 - on error handling with console output.
 
Lesson 19 - what does "Mobile-First" mean?
- Mobile-First can mean different things in different contexts
- How does "mobile-first" apply to our Travel site?
- begin writing css the "mobile-first" way.

What is responsive web design?
What are the shortcomings of traditional responsive web design?

Design Context vs Development Context
Designing around a smaller screen fist.
Force us to prioritize our content
Anticipate most common user actions.
Information architects, graphic designers, usability experts

vs
Coding the site so devices don't download unnecessary data.
Treat the most essential view of our website as our baseline and code upwards from there.
Make the site load quickly for everyone.

Not all projects you'll work on will include a mobile-view design comp.

Even if we are only given a desktop design comp, there is no reason to not make every website
you develop a mobile-first website.